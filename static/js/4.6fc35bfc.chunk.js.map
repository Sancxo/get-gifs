{"version":3,"sources":["routes.js","components/gifs/GifDetails.js","components/gifs/Gif.js","components/GoUpButton.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/SearchPage.js"],"names":["key","routes","getTop20","getSearch","query","offset","getRandom","upload","GifDetails","element","open","handleClose","user","username","Fragment","href","profile_url","target","rel","className","alt","id","src","avatar_url","source","title","Dialog","onClose","DialogTitle","DialogActions","style","border","background","onClick","DialogContent","DialogContentText","url","images","original","rating","Gif","useState","setOpen","width","height","objectFit","GoUpButton","useEffect","window","addEventListener","document","getElementById","removeAttribute","scrollY","setAttribute","transform","position","bottom","right","zIndex","hidden","scrollTo","top","left","behavior","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","SearchPage","search","location","URLSearchParams","get","previousQuery","setPreviousQuery","error","setError","isLoaded","setIsLoaded","data","setData","setOffset","getData","useCallback","newOffset","fetch","then","res","json","previousData","err","PerformanceNavigation","TYPE_RELOAD","message","map","console","log"],"mappings":"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","file":"static/js/4.6fc35bfc.chunk.js","sourcesContent":["/* API routes to fetch different stuff */\r\n\r\nconst key = \"7CnQwmmmyzdPxKtpT93N9IIm4Q17rBLs\";\r\n\r\nconst routes =  {\r\n    getTop20: `https://api.giphy.com/v1/gifs/trending?api_key=${key}&limit=20`,\r\n    getSearch: (query, offset) => { return `https://api.giphy.com/v1/gifs/search?api_key=${key}&q=${query}&offset=${offset}` },\r\n    getRandom: `https://api.giphy.com/v1/gifs/random?api_key=${key}`,\r\n    upload: \"upload.giphy.com/v1/gifs\"\r\n}\r\n\r\nexport default routes;","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nconst GifDetails = ({element, open, handleClose}) => {\r\n\r\n    const userLink = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <a href={element.user.profile_url} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                    { element.username }\r\n                </a> \r\n                <a href={element.user.profile_url} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                    <img className=\"m-3 rounded-circle\" alt=\"avatar\" id=\"avatar\" src={element.user.avatar_url} />\r\n                </a> \r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    // If some elements are not availables\r\n    const user = element.username ? userLink() : \"Anonym\";\r\n    const source = element.source ? <a href={element.source} target=\"_blank\" rel=\"noreferrer noopener\">Source</a> : \"No source available.\";\r\n    const {title} = element ? element : \"Untitled\";\r\n\r\n    return (\r\n        // Material UI Dialog Box\r\n        <Dialog open={ open } onClose={ handleClose }>\r\n\r\n            <div id=\"dialog-ctn\">\r\n\r\n                {/* Head */}\r\n                <div id=\"dialog-head\" className=\"d-flex justify-content-between\">\r\n                    <DialogTitle>{ title }</DialogTitle>\r\n                    <DialogActions>\r\n                        <button style={{ border: 'none', background: 'none' }} onClick={ handleClose }>X</button>\r\n                    </DialogActions>\r\n                </div>\r\n\r\n                {/* Body */}\r\n                <DialogContent id=\"dialog-body\">\r\n                    <DialogContentText className=\"d-flex flex-column align-items-center\">\r\n                        <a href={ element.url } target=\"_blank\" rel=\"noreferrer noopener\">\r\n                            <img src={ element.images.original.url }  alt='Gif' className=\"mb-3\"/>\r\n                        </a>\r\n                        <ul className=\"list-unstyled d-flex flex-column align-items-center flex-wrap\">\r\n                            <li className=\"text-center\"><a href={ element.url } target=\"_blank\" rel=\"noreferrer noopener\">{ element.url }</a></li>\r\n                            <li>Rating : { element.rating }</li>\r\n                            <li>Creator : { user }</li>\r\n                            <li>{ source }</li>\r\n                        </ul>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                \r\n            </div>\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default GifDetails;","import { useState } from \"react\";\r\nimport GifDetails from \"./GifDetails\";\r\n\r\nconst Gif = ({element}) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => { setOpen(true); }\r\n    const handleClose = () => { setOpen(false); }\r\n\r\n    return(\r\n        <div>\r\n            \r\n            {/* Gif Image */}\r\n            <button key={ element.id } style={{ border: 'none', background: 'none' }} onClick={ handleOpen }>\r\n                <li><img src={ element.images.original.url } alt='Gif' key={ element.id } style={{ width: '18rem', height: '18rem', objectFit: 'cover'}} /></li>\r\n            </button>\r\n\r\n            {/* Dialog box /w Gif details */}\r\n            <GifDetails element={ element } open={ open } handleClose={ handleClose } />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gif;","import { useEffect } from \"react\";\r\n\r\nconst GoUpButton = () => {\r\n    // We display the button only if the user is not on top of the page\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', () => {\r\n            document.getElementById(\"go-up-btn\").removeAttribute(\"hidden\");\r\n            if(window.scrollY === 0) {\r\n                document.getElementById(\"go-up-btn\").setAttribute(\"hidden\", true);\r\n            }\r\n        })\r\n    });\r\n\r\n    // \"behavior: 'smooth'\" not working on Chrome, but working on Firefox\r\n    const goTop = () => {\r\n        window.scrollTo({top: 0, left: 0, behavior: \"smooth\" });\r\n    };\r\n\r\n    return (\r\n        <button \r\n            id=\"go-up-btn\"\r\n            className=\"btn btn-secondary mt-3\" \r\n            style={{\r\n                transform: \"rotate(-90deg)\", \r\n                position: \"fixed\", \r\n                bottom: \"1rem\", \r\n                right: \"1rem\", \r\n                zIndex: \"1\"\r\n            }} \r\n            hidden={ true }\r\n            onClick={ goTop }\r\n        >\r\n        {'>'}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default GoUpButton;","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useCallback, useEffect, useState } from \"react\";\r\nimport Gif from \"./gifs/Gif\";\r\nimport routes from \"../routes\";\r\nimport React from \"react\";\r\nimport GoUpButton from \"./GoUpButton\";\r\n\r\nconst SearchPage = () => {\r\n    // Fetch Data\r\n    // We get the query from the url\r\n    const {search} = window.location;\r\n    const query = new URLSearchParams(search).get('query');\r\n    const [previousQuery, setPreviousQuery] = useState('');\r\n\r\n    // fetch variables\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [offset, setOffset] = useState(0);\r\n\r\n    const getData = useCallback((newOffset) => {\r\n        fetch(routes.getSearch(query, newOffset))\r\n        .then(res => res.json())\r\n        .then(\r\n            (res) => {\r\n                // We put the value previously fetched + the new ones to prevent \"data\" having only the newest fetched gifs,\r\n                // so we can make an infinite scroll\r\n                setData(previousData => ([...previousData, ...res.data]));\r\n                setIsLoaded(true);\r\n            },\r\n            (err) => {\r\n                setError(err);\r\n                setIsLoaded(true);\r\n            }\r\n        )\r\n        .then(setPreviousQuery(query))\r\n        .then(setOffset(newOffset))\r\n    }, [query, setData]);\r\n\r\n    // fetch new pages\r\n    const fetchMore = () => {\r\n        let newOffset = offset + 50;\r\n        \r\n        console.log(newOffset)\r\n        getData(newOffset);\r\n    };\r\n\r\n    // Check if there is a new search initiated to reinit the 'data' array and avoid render old results\r\n    // Check also if there is a refresh in navigator to avoid duplication of the same results.\r\n    useEffect(() => {\r\n        if(previousQuery !== query || PerformanceNavigation.TYPE_RELOAD) { // WARNING : Performance Navigation API is deprecated, see PerformanceNavigationTiming.type instead (but still experimental)\r\n            setData([]);\r\n        }\r\n    }, [setData, previousQuery, query])\r\n\r\n    //first fetch\r\n    useEffect(() => {\r\n        getData(0);\r\n    }, [getData]);\r\n\r\n    // End of Fetch\r\n\r\n    if(error) {\r\n        return <div>Erreur : { error.message }</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading ...</div>\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <ul className=\"list-unstyled d-flex flex-wrap justify-content-center mx-5 px-5\">\r\n                    {data.map(element => (\r\n                        <Gif element={ element } key={ element.id } />\r\n                    ))}\r\n                </ul>\r\n\r\n                {/* More Button */}\r\n                <button className=\"btn btn-secondary my-3\" id=\"fetch-new-set\" onClick={ fetchMore } hidden={false}>Still want more ?</button>\r\n\r\n                <GoUpButton />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchPage;"],"sourceRoot":""}